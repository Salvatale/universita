//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceCalcolatrice")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCalcolatrice.IServiceCalcolatrice")]
    public interface IServiceCalcolatrice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/GetData", ReplyAction="http://tempuri.org/IServiceCalcolatrice/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/GetData", ReplyAction="http://tempuri.org/IServiceCalcolatrice/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceCalcolatrice/GetDataUsingDataContractResponse")]
        WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType GetDataUsingDataContract(WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceCalcolatrice/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType> GetDataUsingDataContractAsync(WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Somma", ReplyAction="http://tempuri.org/IServiceCalcolatrice/SommaResponse")]
        string Somma(string p_oper1, string p_oper2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Somma", ReplyAction="http://tempuri.org/IServiceCalcolatrice/SommaResponse")]
        System.Threading.Tasks.Task<string> SommaAsync(string p_oper1, string p_oper2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Sottrai", ReplyAction="http://tempuri.org/IServiceCalcolatrice/SottraiResponse")]
        string Sottrai(string p_oper1, string p_oper2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Sottrai", ReplyAction="http://tempuri.org/IServiceCalcolatrice/SottraiResponse")]
        System.Threading.Tasks.Task<string> SottraiAsync(string p_oper1, string p_oper2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Moltiplica", ReplyAction="http://tempuri.org/IServiceCalcolatrice/MoltiplicaResponse")]
        string Moltiplica(string p_oper1, string p_oper2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Moltiplica", ReplyAction="http://tempuri.org/IServiceCalcolatrice/MoltiplicaResponse")]
        System.Threading.Tasks.Task<string> MoltiplicaAsync(string p_oper1, string p_oper2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Dividi", ReplyAction="http://tempuri.org/IServiceCalcolatrice/DividiResponse")]
        string Dividi(string p_oper1, string p_oper2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCalcolatrice/Dividi", ReplyAction="http://tempuri.org/IServiceCalcolatrice/DividiResponse")]
        System.Threading.Tasks.Task<string> DividiAsync(string p_oper1, string p_oper2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCalcolatriceChannel : WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.IServiceCalcolatrice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCalcolatriceClient : System.ServiceModel.ClientBase<WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.IServiceCalcolatrice>, WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.IServiceCalcolatrice {
        
        public ServiceCalcolatriceClient() {
        }
        
        public ServiceCalcolatriceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCalcolatriceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalcolatriceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCalcolatriceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType GetDataUsingDataContract(WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType> GetDataUsingDataContractAsync(WinWcfClientCalcolatrice.ServiceReferenceCalcolatrice.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string Somma(string p_oper1, string p_oper2) {
            return base.Channel.Somma(p_oper1, p_oper2);
        }
        
        public System.Threading.Tasks.Task<string> SommaAsync(string p_oper1, string p_oper2) {
            return base.Channel.SommaAsync(p_oper1, p_oper2);
        }
        
        public string Sottrai(string p_oper1, string p_oper2) {
            return base.Channel.Sottrai(p_oper1, p_oper2);
        }
        
        public System.Threading.Tasks.Task<string> SottraiAsync(string p_oper1, string p_oper2) {
            return base.Channel.SottraiAsync(p_oper1, p_oper2);
        }
        
        public string Moltiplica(string p_oper1, string p_oper2) {
            return base.Channel.Moltiplica(p_oper1, p_oper2);
        }
        
        public System.Threading.Tasks.Task<string> MoltiplicaAsync(string p_oper1, string p_oper2) {
            return base.Channel.MoltiplicaAsync(p_oper1, p_oper2);
        }
        
        public string Dividi(string p_oper1, string p_oper2) {
            return base.Channel.Dividi(p_oper1, p_oper2);
        }
        
        public System.Threading.Tasks.Task<string> DividiAsync(string p_oper1, string p_oper2) {
            return base.Channel.DividiAsync(p_oper1, p_oper2);
        }
    }
}
